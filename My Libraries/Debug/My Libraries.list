
My Libraries.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000158  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f0  080002f8  000102f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  080002f0  080002f0  000102f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080002f4  080002f4  000102f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  000102f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  080002f8  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000400  2000001c  080002f8  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 0000002a  00000000  00000000  000102f8  2**0
                  CONTENTS, READONLY
  9 .debug_info   000006c7  00000000  00000000  00010322  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 000001d9  00000000  00000000  000109e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000070  00000000  00000000  00010bc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000048  00000000  00000000  00010c38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0000dcc4  00000000  00000000  00010c80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000a16  00000000  00000000  0001e944  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    0004f714  00000000  00000000  0001f35a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000053  00000000  00000000  0006ea6e  2**0
                  CONTENTS, READONLY
 17 .debug_frame  000000ac  00000000  00000000  0006eac4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080002d8 	.word	0x080002d8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080002d8 	.word	0x080002d8

080001d8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 80001dc:	4b12      	ldr	r3, [pc, #72]	; (8000228 <SystemInit+0x50>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	4a11      	ldr	r2, [pc, #68]	; (8000228 <SystemInit+0x50>)
 80001e2:	f043 0301 	orr.w	r3, r3, #1
 80001e6:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80001e8:	4b0f      	ldr	r3, [pc, #60]	; (8000228 <SystemInit+0x50>)
 80001ea:	2200      	movs	r2, #0
 80001ec:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80001ee:	4b0e      	ldr	r3, [pc, #56]	; (8000228 <SystemInit+0x50>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	4a0d      	ldr	r2, [pc, #52]	; (8000228 <SystemInit+0x50>)
 80001f4:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80001f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80001fc:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80001fe:	4b0a      	ldr	r3, [pc, #40]	; (8000228 <SystemInit+0x50>)
 8000200:	4a0a      	ldr	r2, [pc, #40]	; (800022c <SystemInit+0x54>)
 8000202:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000204:	4b08      	ldr	r3, [pc, #32]	; (8000228 <SystemInit+0x50>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a07      	ldr	r2, [pc, #28]	; (8000228 <SystemInit+0x50>)
 800020a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800020e:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000210:	4b05      	ldr	r3, [pc, #20]	; (8000228 <SystemInit+0x50>)
 8000212:	2200      	movs	r2, #0
 8000214:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000216:	4b06      	ldr	r3, [pc, #24]	; (8000230 <SystemInit+0x58>)
 8000218:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800021c:	609a      	str	r2, [r3, #8]
#endif
}
 800021e:	bf00      	nop
 8000220:	46bd      	mov	sp, r7
 8000222:	bc80      	pop	{r7}
 8000224:	4770      	bx	lr
 8000226:	bf00      	nop
 8000228:	40023800 	.word	0x40023800
 800022c:	24003010 	.word	0x24003010
 8000230:	e000ed00 	.word	0xe000ed00

08000234 <main>:
#include "main.h"

int main (void){
 8000234:	b480      	push	{r7}
 8000236:	af00      	add	r7, sp, #0

	while(1){
 8000238:	e7fe      	b.n	8000238 <main+0x4>
	...

0800023c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800023c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000274 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000240:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000242:	e003      	b.n	800024c <LoopCopyDataInit>

08000244 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000244:	4b0c      	ldr	r3, [pc, #48]	; (8000278 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000246:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000248:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800024a:	3104      	adds	r1, #4

0800024c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800024c:	480b      	ldr	r0, [pc, #44]	; (800027c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800024e:	4b0c      	ldr	r3, [pc, #48]	; (8000280 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000250:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000252:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000254:	d3f6      	bcc.n	8000244 <CopyDataInit>
  ldr  r2, =_sbss
 8000256:	4a0b      	ldr	r2, [pc, #44]	; (8000284 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000258:	e002      	b.n	8000260 <LoopFillZerobss>

0800025a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800025a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800025c:	f842 3b04 	str.w	r3, [r2], #4

08000260 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000260:	4b09      	ldr	r3, [pc, #36]	; (8000288 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000262:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000264:	d3f9      	bcc.n	800025a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000266:	f7ff ffb7 	bl	80001d8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800026a:	f000 f811 	bl	8000290 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800026e:	f7ff ffe1 	bl	8000234 <main>
  bx  lr    
 8000272:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8000274:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8000278:	080002f8 	.word	0x080002f8
  ldr  r0, =_sdata
 800027c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000280:	20000000 	.word	0x20000000
  ldr  r2, =_sbss
 8000284:	20000000 	.word	0x20000000
  ldr  r3, = _ebss
 8000288:	2000001c 	.word	0x2000001c

0800028c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC_IRQHandler>
	...

08000290 <__libc_init_array>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	4d0d      	ldr	r5, [pc, #52]	; (80002c8 <__libc_init_array+0x38>)
 8000294:	4c0d      	ldr	r4, [pc, #52]	; (80002cc <__libc_init_array+0x3c>)
 8000296:	1b64      	subs	r4, r4, r5
 8000298:	10a4      	asrs	r4, r4, #2
 800029a:	2600      	movs	r6, #0
 800029c:	42a6      	cmp	r6, r4
 800029e:	d109      	bne.n	80002b4 <__libc_init_array+0x24>
 80002a0:	4d0b      	ldr	r5, [pc, #44]	; (80002d0 <__libc_init_array+0x40>)
 80002a2:	4c0c      	ldr	r4, [pc, #48]	; (80002d4 <__libc_init_array+0x44>)
 80002a4:	f000 f818 	bl	80002d8 <_init>
 80002a8:	1b64      	subs	r4, r4, r5
 80002aa:	10a4      	asrs	r4, r4, #2
 80002ac:	2600      	movs	r6, #0
 80002ae:	42a6      	cmp	r6, r4
 80002b0:	d105      	bne.n	80002be <__libc_init_array+0x2e>
 80002b2:	bd70      	pop	{r4, r5, r6, pc}
 80002b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002b8:	4798      	blx	r3
 80002ba:	3601      	adds	r6, #1
 80002bc:	e7ee      	b.n	800029c <__libc_init_array+0xc>
 80002be:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c2:	4798      	blx	r3
 80002c4:	3601      	adds	r6, #1
 80002c6:	e7f2      	b.n	80002ae <__libc_init_array+0x1e>
 80002c8:	080002f0 	.word	0x080002f0
 80002cc:	080002f0 	.word	0x080002f0
 80002d0:	080002f0 	.word	0x080002f0
 80002d4:	080002f4 	.word	0x080002f4

080002d8 <_init>:
 80002d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002da:	bf00      	nop
 80002dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002de:	bc08      	pop	{r3}
 80002e0:	469e      	mov	lr, r3
 80002e2:	4770      	bx	lr

080002e4 <_fini>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	bf00      	nop
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr
